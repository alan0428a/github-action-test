name: GitHub Actions Demo
on:
  push:
    tags:
      - "*"
jobs:
  Parsing:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.parsing.outputs.image }}
      version: ${{ steps.parsing.outputs.version }}
    steps:
      - uses: jungwinter/split@v2
        id: split
        with:
          msg: '${{github.ref_name}}'
          separator: '_'
          
      - name: Check Status
        if: steps.split.outputs.length != 2
        run: exit 1
        
      - name: Parsing Tag
        id: parsing
        if: steps.split.outputs.length == 2
        run: | 
          echo "Image is ${{steps.split.outputs._0}} and version is ${{steps.split.outputs._1}}"
          echo "::set-output name=image::${{steps.split.outputs._0}}"
          echo "::set-output name=version::${{steps.split.outputs._1}}"

  Build:
    needs: Parsing
    runs-on: ubuntu-latest
    steps:
      - run: echo "Image is ${{needs.Parsing.outputs.image}} and version is ${{needs.Parsing.outputs.version}}"
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{needs.Parsing.outputs.image}}:${{needs.Parsing.outputs.version}}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{needs.Parsing.outputs.image}}:${{needs.Parsing.outputs.version}}




